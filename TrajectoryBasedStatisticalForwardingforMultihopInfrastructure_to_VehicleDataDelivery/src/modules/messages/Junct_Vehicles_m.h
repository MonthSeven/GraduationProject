//
// Generated file, do not edit! Created by nedtool 4.6 from src/modules/messages/Junct_Vehicles.msg.
//

#ifndef _JUNCT_VEHICLES_M_H_
#define _JUNCT_VEHICLES_M_H_

#include <omnetpp.h>

// nedtool version check
#define MSGC_VERSION 0x0406
#if (MSGC_VERSION!=OMNETPP_VERSION)
#    error Version mismatch! Probably this file was generated by an earlier version of nedtool: 'make clean' should help.
#endif



/**
 * Class generated from <tt>src/modules/messages/Junct_Vehicles.msg:13</tt> by nedtool.
 * <pre>
 * //**************************************************************************
 * // * file:        Mac80211Pkt.msg
 * // *
 * // * author:      Marc Lï¿½bbers
 * // * copyright:   (c) by 'the Glimmer Twins'
 * // *              Telecommunication Networks Group
 * // *              TU-Berlin
 * // * email:       loebbers@tkn.tu-berlin.de
 * // **************************************************************************
 * // * part of:     framework implementation developed by tkn
 * // ************************************************************************  
 * packet NumVJ
 * {
 *     string visjunct;
 *     int visnum;
 * }
 * </pre>
 */
class NumVJ : public ::cPacket
{
  protected:
    opp_string visjunct_var;
    int visnum_var;

  private:
    void copy(const NumVJ& other);

  protected:
    // protected and unimplemented operator==(), to prevent accidental usage
    bool operator==(const NumVJ&);

  public:
    NumVJ(const char *name=NULL, int kind=0);
    NumVJ(const NumVJ& other);
    virtual ~NumVJ();
    NumVJ& operator=(const NumVJ& other);
    virtual NumVJ *dup() const {return new NumVJ(*this);}
    virtual void parsimPack(cCommBuffer *b);
    virtual void parsimUnpack(cCommBuffer *b);

    // field getter/setter methods
    virtual const char * getVisjunct() const;
    virtual void setVisjunct(const char * visjunct);
    virtual int getVisnum() const;
    virtual void setVisnum(int visnum);
};

inline void doPacking(cCommBuffer *b, NumVJ& obj) {obj.parsimPack(b);}
inline void doUnpacking(cCommBuffer *b, NumVJ& obj) {obj.parsimUnpack(b);}


#endif // ifndef _JUNCT_VEHICLES_M_H_


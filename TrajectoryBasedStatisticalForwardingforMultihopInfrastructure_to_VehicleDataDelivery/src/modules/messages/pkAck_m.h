//
// Generated file, do not edit! Created by nedtool 4.6 from src/modules/messages/pkAck.msg.
//

#ifndef _PKACK_M_H_
#define _PKACK_M_H_

#include <omnetpp.h>

// nedtool version check
#define MSGC_VERSION 0x0406
#if (MSGC_VERSION!=OMNETPP_VERSION)
#    error Version mismatch! Probably this file was generated by an earlier version of nedtool: 'make clean' should help.
#endif



/**
 * Class generated from <tt>src/modules/messages/pkAck.msg:8</tt> by nedtool.
 * <pre>
 * //
 * // Defines all fields of an 802.11 MAC frame
 * //
 * packet ackn
 * {
 *     string myNodeID;
 *     int myMac;
 *     int pktSeqNum;
 * }
 * </pre>
 */
class ackn : public ::cPacket
{
  protected:
    opp_string myNodeID_var;
    int myMac_var;
    int pktSeqNum_var;

  private:
    void copy(const ackn& other);

  protected:
    // protected and unimplemented operator==(), to prevent accidental usage
    bool operator==(const ackn&);

  public:
    ackn(const char *name=NULL, int kind=0);
    ackn(const ackn& other);
    virtual ~ackn();
    ackn& operator=(const ackn& other);
    virtual ackn *dup() const {return new ackn(*this);}
    virtual void parsimPack(cCommBuffer *b);
    virtual void parsimUnpack(cCommBuffer *b);

    // field getter/setter methods
    virtual const char * getMyNodeID() const;
    virtual void setMyNodeID(const char * myNodeID);
    virtual int getMyMac() const;
    virtual void setMyMac(int myMac);
    virtual int getPktSeqNum() const;
    virtual void setPktSeqNum(int pktSeqNum);
};

inline void doPacking(cCommBuffer *b, ackn& obj) {obj.parsimPack(b);}
inline void doUnpacking(cCommBuffer *b, ackn& obj) {obj.parsimUnpack(b);}


#endif // ifndef _PKACK_M_H_

